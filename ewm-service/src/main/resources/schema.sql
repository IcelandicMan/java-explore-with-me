DROP TABLE IF EXISTS locations, categories, requests, compilations_events, event_comments, compilations, events, users;

CREATE TABLE IF NOT EXISTS users (
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(250) NOT NULL,
	email VARCHAR(254) NOT NULL UNIQUE,

	CONSTRAINT users_pk PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS categories (
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(50) NOT NULL UNIQUE,

	CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS locations (
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	lat	FLOAT NOT NULL,
	lon	FLOAT NOT NULL,

	CONSTRAINT pk_locations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events (
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	initiator_id INTEGER NOT NULL,
	category_id INTEGER NOT NULL,
	location_id INTEGER NOT NULL,
	title VARCHAR(120) NOT NULL,
	annotation VARCHAR(2000) NOT NULL,
	event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
	paid BOOLEAN DEFAULT FALSE NOT NULL,
	description VARCHAR(7000) NOT NULL,
	confirmed_requests INTEGER,
	participant_limit INTEGER DEFAULT 0,
	request_moderation BOOLEAN DEFAULT FALSE,
	published_on TIMESTAMP WITHOUT TIME ZONE,
	created_on TIMESTAMP WITHOUT TIME ZONE,
	state VARCHAR(20),
	views INTEGER,

	CONSTRAINT pk_events PRIMARY KEY (id),
	CONSTRAINT fk_initiator_id FOREIGN KEY (initiator_id) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT fk_category_id FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT fk_location_id FOREIGN KEY (location_id) REFERENCES locations (id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS requests (
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	event_id INTEGER NOT NULL,
	requester_id INTEGER NOT NULL,
	status VARCHAR(30) NOT NULL,
	created TIMESTAMP WITHOUT TIME ZONE,

	CONSTRAINT pk_requests PRIMARY KEY (id),
	CONSTRAINT uq_requests UNIQUE(event_id, requester_id),
	CONSTRAINT fk_requester_id FOREIGN KEY (requester_id) REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT fk_event_id FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS compilations (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	pinned BOOLEAN DEFAULT FALSE,
	title VARCHAR(50) NOT NULL,

	CONSTRAINT pk_compilations PRIMARY KEY (id),
	CONSTRAINT uq_compilations UNIQUE (title)
);

CREATE TABLE IF NOT EXISTS compilations_events (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	compilation_id INTEGER NOT NULL,
	event_id INTEGER NOT NULL,

	CONSTRAINT fk_compilations_events_compilation_id FOREIGN KEY (compilation_id) REFERENCES compilations (id),
	CONSTRAINT fk_compilations_events_event_id FOREIGN KEY (event_id) REFERENCES events (id)
);

CREATE TABLE IF NOT EXISTS event_comments (
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	text VARCHAR(500) NULL,
    event_id integer NOT NULL,
    author_id integer NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE,
    state VARCHAR(20),
    parent_comment_id INTEGER,
	CONSTRAINT comment_pk PRIMARY KEY (id),
	CONSTRAINT comment_fk FOREIGN KEY (event_id) REFERENCES events(id) ON DELETE CASCADE,
	CONSTRAINT comment_fk2 FOREIGN KEY (author_id) REFERENCES users(id) ON DELETE CASCADE,
	CONSTRAINT comment_fk_answer FOREIGN KEY (parent_comment_id) REFERENCES event_comments(id) ON DELETE CASCADE
);